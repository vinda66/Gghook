--[[made by _milo22 on dsicord well know for making cheats and cheating on trident survival (2023) or trident survival v5 if you want to skid this cheat then pls give me credit if not then i will not be happy bit that will be fine with me i would do nothing about it anyways but i would be happy if u atleast gave me credit but if not that is complty fine btw i am 15 and taken so don't dm me to date you peace out]]--

-- Locals to call the ui
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()
--
local window = DrRayLibrary:Load("Ez bans.exe", "Default")
-- Combat
local tab = DrRayLibrary.newTab("Combat", "ImageIdHere")
--
tab.newToggle("Toggle hbe", "Toggle hbe (hitbox expander)", true, function(toggleState)
    Hitbox = toggleState 
end) 
tab.newSlider("hitbox size", "hitbox expander slider", 30, false, function(num)
    headsize = num
end)
--
local function modifyPlayerHeads()
    for i, v in next, game.Workspace:GetChildren() do
        if v.Name == "Model" and v:FindFirstChild("Head") then
            local head = v.Head
            if head then
                local success, _ = pcall(function()
                    head.Size = Vector3.new(headsize, headsize, headsize)
                    head.Transparency = 0.5
                end)
                if not success then
                    warn("Failed to modify head for player:", v.Name)
                end
            end
        end
    end
end
--
game:GetService("RunService").RenderStepped:Connect(function()
    if Hitbox then
        modifyPlayerHeads()
    end
end)
tab.newToggle("kill aura", "kill aura(kill aura) ", true function(toggleState)
local KillAuraTabBox = Tabs.CombatTab:AddLeftTabbox('kill aura')
local KillAuraTab = KillAuraTabBox:AddTab('kill aura')

--* Kill Aura *--

function Functions:GetLocalToolName()
if getrenv()._G.modules.FPS.GetEquippedItem() == nil then return 0,0 end
local mod = require(game:GetService("ReplicatedStorage").ItemConfigs[getrenv()._G.modules.FPS.GetEquippedItem().id])
for i,v in pairs(mod) do
if i == "HandModel" then
	return mod.HandModel
end
end
return 0,0
end
local killauradistance = 8
local function GetPlayer()
local closest,PlayerDistance,playerTable = nil,math.huge,nil
for i,v in pairs(getupvalues(getrenv()._G.modules.Player.GetPlayerModel)[1]) do
if v.model:FindFirstChild("HumanoidRootPart") then
	local Mouse = game.Players.LocalPlayer:GetMouse()
	local pos,OnScreen = Camera.WorldToViewportPoint(Camera, v.model:GetPivot().Position)
	local PlayerDistance = (CharcaterMiddle:GetPivot().Position-v.model:GetPivot().Position).Magnitude
	Distance = (game.Workspace.Ignore.LocalCharacter.Middle.Position - v.model:GetPivot().Position).Magnitude
	if PlayerDistance <= killauradistance and OnScreen == true then
		closest = v.model;PlayerDistance = PlayerDistance;playerTable=v
	end
end
end
return closest,playerTable
end

local KAHitPartSelected = "Head"
local Wait = 0.95
local AuraGoodToUse = false
KillAuraTab:AddToggle('KillAura',{Text='kill aura',Default=false}):AddKeyPicker('KillAuraKey', {Default='Non',SyncToggleState=true,Mode='Toggle',Text='Kill Aura',NoUI=false})
local PlayerID = nil
local Bypass; Bypass = hookfunction(game:GetService("Players").LocalPlayer:FindFirstChild("RemoteEvent").FireServer,function(self, ...)
local args = {...}
if args[1] == 10 and args[2] == "Hit" then
PlayerID = args[3]
end
return Bypass(self, unpack(args))
end)
task.spawn(function()
while task.wait() do
local state = Options.KillAuraKey:GetState()
if state then
local PlayerHumanoid,fr = GetPlayer()
if PlayerHumanoid and AuraGoodToUse and PlayerHumanoid ~= nil and fr ~= nil then
	game:GetService("Players").LocalPlayer.RemoteEvent:FireServer(10, "Swing")
	game:GetService("Players").LocalPlayer.RemoteEvent:FireServer(10, "Hit", fr.id, PlayerHumanoid.HumanoidRootPart.Position, KAHitPartSelected, Vector3.new(-0.1275634765625, 0.5433349609375, -0.237548828125))
	wait(Wait)
end
end
end
end)
task.spawn(function()
while task.wait() do
local Weapon = Functions:GetLocalToolName()
if Weapon == "MiningDrill" then
Wait = 0.12
else
Wait = 0.95
end
if Weapon == "Hammer" or "Crowbar" or "StoneHammer" or "SteelHammer" or "MiningDrill" or "IronHammer" then
AuraGoodToUse = true
else
AuraGoodToUse = false
end
end
end)

KillAuraTab:AddSlider('', {Text = 'distance:', Default = 8, Min = 5, Max = 10, Rounding = 0, Suffix = " studs", Compact = false}):OnChanged(function(Value)
killauradistance = Value
end)

KillAuraTab:AddDropdown('', {Values = {"Head", "HumanoidRootPart", "Torso", "LowerTorso", "RightHand", "LeftHand", "RightFoot", "LeftFoot"}, Default = 1, Multi = false, Text = 'hitpart:'}):OnChanged(function(Value)
KAHitPartSelected = Value
end)
-- Visuals
local tab = DrRayLibrary.newTab("visuals", "ImageIdHere")
tab.newButton("esp", "high lights", function()
local function createHighlight(object)
    if not object:FindFirstChild("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Parent = object
        highlight.FillColor = Color3.fromRGB(255, 0, 0)
        highlight.FillTransparency = 0.5
        highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
        highlight.OutlineTransparency = 0.5
    end
end
--
for _, object in pairs(workspace:GetChildren()) do
    if object:FindFirstChild("Head") then
        createHighlight(object)
    end
end
--
workspace.ChildAdded:Connect(function(child)
    if child:FindFirstChild("Head") then
        createHighlight(child)
    end
end)
end)
-- tc esp
tab.newButton("tc esp", "yellow", function()
local HighlightColor = Color3.fromRGB(255, 255, 100)
--
function highlightBaseParts()
    for _, model in ipairs(workspace:GetDescendants()) do
        if model:IsA("Model") and model.PrimaryPart and model.PrimaryPart.Name == "Base" then
            if not model:FindFirstChild("BaseHighlight") then
                local highlight = Instance.new("Highlight")
                highlight.Name = "BaseHighlight"
                highlight.FillColor = HighlightColor
                highlight.OutlineColor = HighlightColor
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                highlight.Adornee = model
                highlight.Parent = model
            end
        end
    end
end
--
highlightBaseParts()
--
workspace.DescendantAdded:Connect(function(descendant)
    if descendant:IsA("Model") and descendant.PrimaryPart and descendant.PrimaryPart.Name == "Base" then
        task.wait(0.1)
        highlightBaseParts()
    end
end)
end)
-- ore esp
tab.newButton("ore esp", "blue", function()
local HighlightColor = Color3.fromRGB(100, 200, 255)
local LastChecked = 0
local CheckInterval = 1 
local highlightedParts = {}  
--
local function highlightLimestoneParts()
    local currentTime = tick()
    --
    if currentTime - LastChecked < CheckInterval then
        return
    end
--
    LastChecked = currentTime
--
  for _, instance in ipairs(workspace:GetDescendants()) do
        if instance:IsA("BasePart") and instance.Material == Enum.Material.Limestone then
            if not highlightedParts[instance] then
                local highlight = Instance.new("Highlight")
                highlight.Name = "LimestoneHighlight"
                highlight.FillColor = HighlightColor
                highlight.OutlineColor = HighlightColor
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                highlight.Adornee = instance
                highlight.Parent = instance
--
                highlightedParts[instance] = highlight
            end
        end
    end
end
--
highlightLimestoneParts()
    --
workspace.DescendantAdded:Connect(function(descendant)
--  
    if descendant:IsA("BasePart") and descendant.Material == Enum.Material.Limestone then
        if not highlightedParts[descendant] then
            local highlight = Instance.new("Highlight")
            highlight.Name = "LimestoneHighlight"
            highlight.FillColor = HighlightColor
            highlight.OutlineColor = HighlightColor
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            highlight.Adornee = descendant
            highlight.Parent = descendant
 --         
            highlightedParts[descendant] = highlight
        end
    end
end)
end)
-- Hitsounds
local tab = DrRayLibrary.newTab("Hitsounds", "ImageIdHere")
tab.newButton("dink", "dink hitsound", function()
game:GetService("SoundService").PlayerHitHeadshot.EqualizerSoundEffect.HighGain = -1.5
game:GetService("SoundService").PlayerHitHeadshot.SoundId =  "rbxassetid://8726881116"
end)
    --
tab.newButton("Defualt Headshot Hit", "", function()
game:GetService("SoundService").PlayerHitHeadshot.EqualizerSoundEffect.HighGain = -1.5
game:GetService("SoundService").PlayerHitHeadshot.SoundId =  "rbxassetid://9119561046"
end)
    --
tab.newButton("rust", "", function()
game:GetService("SoundService").PlayerHitHeadshot.EqualizerSoundEffect.HighGain = -1.5
game:GetService("SoundService").PlayerHitHeadshot.SoundId =  "rbxassetid://1255040462"
end)
-- sky boxes
local tab = DrRayLibrary.newTab("sky box", "ImageIdHere")
local Lighting = game:GetService("Lighting")
--
local Sky = Instance.new("Sky")
Sky.Name = "CustomSky"
Sky.Parent = Lighting
--
local SkyBoxes = {
  ["Standard"] = {
    ["SkyboxBk"] = Sky.SkyboxBk, ["SkyboxDn"] = Sky.SkyboxDn,
    ["SkyboxFt"] = Sky.SkyboxFt, ["SkyboxLf"] = Sky.SkyboxLf,
    ["SkyboxRt"] = Sky.SkyboxRt, ["SkyboxUp"] = Sky.SkyboxUp
  },
  ["Among Us"] = {
    ["SkyboxBk"] = "rbxassetid://5752463190", ["SkyboxDn"] = "rbxassetid://5752463190",
    ["SkyboxFt"] = "rbxassetid://5752463190", ["SkyboxLf"] = "rbxassetid://5752463190",
    ["SkyboxRt"] = "rbxassetid://5752463190", ["SkyboxUp"] = "rbxassetid://5752463190"
  },
  ["Spongebob"] = {
    ["SkyboxBk"]="rbxassetid://277099484", ["SkyboxDn"]="rbxassetid://277099500",
    ["SkyboxFt"]="rbxassetid://277099554", ["SkyboxLf"]="rbxassetid://277099531",
    ["SkyboxRt"]="rbxassetid://277099589", ["SkyboxUp"]="rbxassetid://277101591"
  },
  ["Deep Space"] = {
    ["SkyboxBk"]="rbxassetid://159248188", ["SkyboxDn"]="rbxassetid://159248183",
    ["SkyboxFt"]="rbxassetid://159248187", ["SkyboxLf"]="rbxassetid://159248173",
    ["SkyboxRt"]="rbxassetid://159248192", ["SkyboxUp"]="rbxassetid://159248176"
  },
  ["Winter"] = {
    ["SkyboxBk"]="rbxassetid://510645155", ["SkyboxDn"]="rbxassetid://510645130",
    ["SkyboxFt"]="rbxassetid://510645179", ["SkyboxLf"]="rbxassetid://510645117",
    ["SkyboxRt"]="rbxassetid://510645146", ["SkyboxUp"]="rbxassetid://510645195"
  },
  ["Clouded Sky"] = {
    ["SkyboxBk"]="rbxassetid://252760981", ["SkyboxDn"]="rbxassetid://252763035",
    ["SkyboxFt"]="rbxassetid://252761439", ["SkyboxLf"]="rbxassetid://252760980",
    ["SkyboxRt"]="rbxassetid://252760986", ["SkyboxUp"]="rbxassetid://252762652"
  }
}
--
local currentSky = nil
--
local function setSkybox(data)
  for face, id in pairs(data) do
    Sky[face] = id
  end
end
--
for name, data in pairs(SkyBoxes) do
  tab.newToggle(name, "Enable " .. name .. " skybox", false, function(state)
    if state then
      setSkybox(data)
      currentSky = name
    elseif currentSky == name then
      for _, face in pairs({"SkyboxBk", "SkyboxDn", "SkyboxFt", "SkyboxLf", "SkyboxRt", "SkyboxUp"}) do
        Sky[face] = ""
      end
      currentSky = nil
    end
  end)
end 
-- Print the name
for _, line in ipairs({"GGhook"}) do
    warn(line)
end
